/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Morris_Mano;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dobler
 */
public class MemoryInterface extends javax.swing.JFrame {

    /**
     * Creates new form MemoryInterface
     */
    private Memory m = new Memory ();
    public MemoryInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Memory");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Vector data= new Vector();
                 m.FillData(data);
                
                 Vector column= new Vector();
                 for(int i= 0 ; i <= 255 ; i++) {
                     String hex = Integer.toHexString(i);
                     if(hex.length()==1) hex="0"+hex.toUpperCase();
                     else  hex=hex.toUpperCase();
                     column.add(hex);
                 }
                
                
                DefaultTableModel InvModel = new DefaultTableModel(data,column);
                 jTable1.setModel(InvModel);
                 jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                 jTable1.setRowSelectionAllowed(true);
                 jTable1.setBackground(Color.WHITE);
                 jTable1.setOpaque(true);
                 jTable1.setDefaultEditor(Object.class, null); // to endable editing
                 jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                
                
                
               String hex = jTextField1.getText();
               try { 
                    int num=Integer.parseInt(hex,16); 
                    int row = Integer.parseInt(""+hex.charAt(0),16);
                    int coulmn = Integer.parseInt(""+hex.charAt(1)+hex.charAt(2),16);
                    if(hex.length()>3) { JOptionPane.showMessageDialog(null, "Size should be 3 digits only", "Failure", JOptionPane.ERROR_MESSAGE);    }
                    else  {
                    jTable1.changeSelection(row, coulmn, false, false); // row, column
                    jTable1.requestFocus();
                            }
                   
               }
               catch (Exception e) {
                   JOptionPane.showMessageDialog(null, "uncompitible type", "Failure", JOptionPane.ERROR_MESSAGE); 
               }
                
              
               
            
            }
        }) ;
        
        m.Automate();
         Vector data= new Vector();
                 m.FillData(data);
                
                 Vector column= new Vector();
                 for(int i= 0 ; i <= 255 ; i++) {
                     String hex = Integer.toHexString(i);
                     if(hex.length()==1) hex="0"+hex.toUpperCase();
                     else  hex=hex.toUpperCase();
                     column.add(hex);
                 }
                 
                 System.out.print(column.toString());
                 System.out.print(data.toString());
        
        DefaultTableModel InvModel = new DefaultTableModel(data,column);
                 jTable1.setModel(InvModel);
                 jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                 jTable1.setRowSelectionAllowed(true);
                 jTable1.setBackground(Color.WHITE);
                 jTable1.setOpaque(true);
                 jTable1.setDefaultEditor(Object.class, null); // to endable editing
                 jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemoryInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemoryInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemoryInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemoryInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemoryInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
