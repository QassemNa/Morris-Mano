/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Morris_Mano;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Hashtable;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication3.FlowChart;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Dobler
 */
public class InterFace2 extends javax.swing.JFrame {

    /**
     * Creates new form InterFace2
     */
    public InterFace2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
 
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(900,500);
        setTitle("Morris mano Assembler");

        jTextArea1.setColumns(10);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        
        m.Automate();
        MemoryInterface = new MemoryInterface2 (m);
        
        
        //_________________________________________________________________TABLE___________________________________________________________
       Vector data= new Vector();
                 
       String str [] = {"PC","IR","Instruction Name","AC","DR","AR","M[AR]","Instruction Category","Addressing Mode"};        
               
                 Vector column= new Vector();
                 for(int i= 0 ; i <= 8 ; i++) {
                     column.add(str[i]);
                 }
                 
                 System.out.print(column.toString());
                 System.out.print(data.toString());
        
        DefaultTableModel InvModel = new DefaultTableModel(data,column);
                 jTable1.setModel(InvModel);
                 jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                 jTable1.setRowSelectionAllowed(true);
                 jTable1.setBackground(Color.WHITE);
                 jTable1.setOpaque(true);
                 jTable1.setDefaultEditor(Object.class, null); // to endable editing
                 jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable1);
        
       //_________________________________________________END TABLE _________________________________________________________________
       
            
        
  
        jTextArea2.setColumns(10);
        jTextArea2.setForeground(new java.awt.Color(255, 0, 0));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(3);
        jTextArea2.setEditable(false);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel1.setText("Set PC:");
        

        //______________________________________________RUN Button____________________________________________________________________
                Hashtable<String, String> 
            mr = new Hashtable<String, String>(); 
            mr.put("and","0"); mr.put("and","8[");
            mr.put("add","1"); mr.put("add[","9");
            mr.put("lda","2"); mr.put("lda[" ,"A" );
            mr.put("sta","3"); mr.put("sta[","B");
            mr.put("bun","4"); mr.put("bun[","C");
            mr.put("bsa","5"); mr.put("bsa[","D");
            mr.put("isz","6"); mr.put("isz[","E");
            
            mr.put("cla", "7800");
            mr.put("cle", "7400");
            mr.put("cma", "7200");
            mr.put("cme", "7100");
            mr.put("cir", "7080");
            mr.put("cil", "7040");
            mr.put("inc", "7020");
            mr.put("spa", "7010");
            mr.put("sna", "7008");
            mr.put("sza", "7004");
            mr.put("sze", "7002");
            mr.put("hlt", "7001");
            
            mr.put("inp", "F800");
            mr.put("out", "F400");
            mr.put("ski", "F200");
            mr.put("sko", "F100");
            mr.put("ion", "F080");
            mr.put("iof", "F040");
        
        
        
        jButton1.setText("Run");
        jButton1.addActionListener(new ActionListener () {
            @Override
            public void actionPerformed(ActionEvent ae) {
                boolean err=false;
                String inst = jTextArea1.getText();
                String Serialinst="";
                Scanner reader = new Scanner (inst);
                String result[];
                String PC = jTextField1.getText();
                boolean nothex=false;
                try {
                    int intPC= Integer.parseInt(PC,16);
                } catch (Exception e) {
                    nothex=true;
                }
                if (inst.equals("")) { jTextArea2.setText("There is no data entered "); err=true;  }
                while (reader.hasNextLine()) {
                    
                    //_____________________READING THE INPUT FROM THE USER AND TRANSLATE IT INTO HEX_____________________________________
                    String Inst = reader.nextLine();
                    String hex = Translator.Tranlate(Inst);
                    
                    if (PC.equals("")) { jTextArea2.setText("Error please enter the PC "); err=true; break; }
                    else if (PC.length()>3||nothex) { jTextArea2.setText("Error invalid PC "); err=true; break;  }
                    else if(hex==null) { jTextArea2.setText("Error in instruction " + Inst); err=true; break;  }
                    else { 
                        Serialinst=Serialinst+hex+"\n";
                        jTextArea2.setText("");
                        System.out.println(Inst+"  "+hex);
                    }
                  
                        }
                 if(!err) { // if there is no error
                        System.out.println(Serialinst);
                        
           // __________________ WRITING THE INSTRUCTIONS IN THE MEMORY _____________________________________
                        
                        m.PaseAddress(PC);
                      
			Scanner scanner = new Scanner(Serialinst);
			while (scanner.hasNextLine()) {
				m.AddMemoryBlock(scanner.nextLine());
                                    }
                      //  m.print();
           //_______________________RUNING THE ALGORITHIMS_______________________________________________
           Algorithims Algo = new Algorithims(m);
           Algo.setPC(PC);
           System.out.println("PC"+"\t"+"IR"+"\t"+"IRN"+"\tAC\tDR\tAR\tM[AR]\tInstruction Category\tADMode");
           
                 
       String str [] = {"PC","IR","Instruction Name","AC","DR","AR","M[AR]","Instruction Category","Addressing Mode"};        
               
                 Vector column= new Vector();
                 for(int i= 0 ; i <= 8 ; i++) {
                     column.add(str[i]);
                 }
                 
                 System.out.print(column.toString());
                 System.out.print(data.toString());
        
              Vector data= new Vector();
            while("1".equals(Algo.S)){
                Vector row= new Vector ();
                Algo.init();
                Algo.FillData(row);
                data.add(row);
            }
            DefaultTableModel InvModel = new DefaultTableModel(data,column);
            jTable1.setModel(InvModel);
               
                 jButton4.setVisible(true); 
                 }
               
            }

        });
        
        

        jButton2.setText("Step Into");
        jButton2.setVisible(false);
        
        

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Table");

        jButton3.setText("Show Memory");
        jButton3.addActionListener(new ActionListener () {
            @Override
            public void actionPerformed(ActionEvent ae) {
               MemoryInterface.setVisible(true);
            }
        
        });

        jButton4.setText("FlowChart");
        jButton4.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
             
            }
        
        
        });
        jButton4.setVisible(false);
        jButton4.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    java.awt.Desktop.getDesktop().browse(java.net.URI.create("file:///C:/Users/Dobler/Documents/NetBeansProjects/CO/src/22/flowcharttest.html"));
                } catch (IOException ex) {
                    Logger.getLogger(InterFace2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        } );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

       // pack();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterFace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterFace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterFace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterFace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterFace2().setVisible(true);
            }
        });
    }

    
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private Translator Translator = new Translator ();
    private Memory m= new Memory();
    private static int stpctr = 0;
    private MemoryInterface2 MemoryInterface ;
    FlowChart a = new FlowChart();
}
